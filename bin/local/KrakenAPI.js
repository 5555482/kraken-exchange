// Generated by CoffeeScript 2.0.0-beta2
(function() {
  var API, APIVERSION, KrakenAPI, KrakenPrivate, Path, Request, TIMEOUT, URL;

  Request = require('request-promise-native');

  Path = require('path');

  ({URL} = require('url'));

  API = 'https://api.kraken.com';

  APIVERSION = 0;

  TIMEOUT = 5000;

  KrakenAPI = class KrakenAPI {
    constructor(path, headers = {}, form) {
      this.headers = headers;
      this.form = form;
      this.url = new URL(`${APIVERSION}/${path}`, API);
    }

    api() {
      this.headers['User-Agent'] = 'Kraken Exchange Node Client';
      console.log('HEADERS', this.headers);
      return Request({
        method: 'POST',
        url: this.url,
        headers: this.headers,
        form: this.form,
        timeout: TIMEOUT
      }).then(function(response) {
        response = JSON.parse(response);
        if (response.error.length) {
          throw new Error(response.error);
        }
        return response.result;
      });
    }

  };

  KrakenPrivate = class KrakenPrivate extends KrakenAPI {
    constructor(key, secret, method, params) {}

  };

  module.exports = KrakenAPI;

}).call(this);
