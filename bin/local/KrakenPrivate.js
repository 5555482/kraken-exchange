// Generated by CoffeeScript 2.0.0-beta2
(function() {
  var Crypto, KrakenAPI, KrakenPrivate, NONCE, Querystring, sign;

  KrakenAPI = require('./KrakenAPI');

  Querystring = require('querystring');

  Crypto = require('crypto');

  NONCE = new Date().valueOf() * 1000;

  sign = function(path, secret, params) {
    var hash, hash_digest, hmac, hmac_digest, message;
    console.log("PARAMS", params);
    message = Querystring.stringify(params);
    secret = Buffer.from(secret, 'base64');
    hash = Crypto.createHash('sha256');
    hmac = Crypto.createHmac('sha512', secret);
    hash_digest = hash.update(params.nonce + message).digest('latin1');
    return hmac_digest = hmac.update(path + hash_digest, 'latin1').digest('base64');
  };

  KrakenPrivate = class KrakenPrivate extends KrakenAPI {
    constructor(method, key, secret, params = {}) {
      var headers, path;
      headers = {
        'API-KEY': key
      };
      path = `private/${method}`;
      super(path, headers, params);
      this.key = key;
      this.secret = secret;
    }

    api() {
      var path, sig;
      this.form.nonce = NONCE++;
      path = this.url.pathname;
      console.log('PATH', path);
      sig = sign(path, this.secret, this.form);
      this.headers['API-Sign'] = sig;
      return super.api();
    }

  };

  module.exports = KrakenPrivate;

}).call(this);
